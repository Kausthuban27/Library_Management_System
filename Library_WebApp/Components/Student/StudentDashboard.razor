@using Microsoft.AspNetCore.Mvc
@inject IStudentService _studentService
@inject UserStateManagementService _userStateManagement

<h3 class="text-center fs-3">Your Dashboard</h3>

<div>
    <h3>Books Rented</h3>
    <BSDataTable Items="rentedBooks" PaginationBottom="true" StartPage="1" RowsPerPage="5" Context="item">
        <Header>
            <BSDataTableHead Color="BSColor.Dark" TValue="EbookRent" Sortable="true" Column="@(nameof(EbookRent.Id))">Book Id</BSDataTableHead>
            <BSDataTableHead Color="BSColor.Dark" TValue="EbookRent" Sortable="true" Column="@(nameof(EbookRent.Bookname))">Book name</BSDataTableHead>
            <BSDataTableHead Color="BSColor.Dark" TValue="EbookRent" Sortable="true" Column="@(nameof(EbookRent.Category))">Book Category</BSDataTableHead>
            <BSDataTableHead Color="BSColor.Dark" TValue="EbookRent" Sortable="true" Column="@(nameof(EbookRent.RentAmount))">Amount Rented</BSDataTableHead>
        </Header>
        <Body>
            <BSDataTableRow>
                <BSTD>
                    @item.Id
                </BSTD>
                <BSTD>
                    @item.Bookname
                </BSTD>
                <BSTD>
                    @item.Category
                </BSTD>
                <BSTD>
                    @item.RentAmount
                </BSTD>
            </BSDataTableRow>
        </Body>
    </BSDataTable>
</div> 

@code 
{
    public IEnumerable<EbookRent> rentedBooks => ebookRents;
    public List<EbookRent> ebookRents { get; set; } = new();

    protected override async Task OnInitializedAsync()
    {
        await EbookRents();
    }

    private async Task<List<EbookRent>> EbookRents()
    {
        var response = await _studentService.ebookRents(_userStateManagement.username);
        if (response.Any())
        {
            ebookRents.AddRange(response);
            return ebookRents;
        }
        
        return new List<EbookRent> {};
    }
}
