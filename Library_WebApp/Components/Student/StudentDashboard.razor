@using Microsoft.AspNetCore.Mvc
@inject IStudentService _studentService
@inject UserStateManagementService _userStateManagement
@inject IJSRuntime JSRuntime

<h3 class="text-center fs-3">Your Dashboard</h3>

<div>
    <h3>Books Rented</h3>
    <div class="table-responsive">
        <table class="table table-bordered table-hover" id="rentedBooksTable">
            <thead>
                <tr>
                    <th>Book Id</th>
                    <th>Book Name</th>
                    <th>Book Category</th>
                    <th>Amount Rented</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in rentedBooks)
                {
                    <tr>
                        <td>@item.Id</td>
                        <td>@item.Bookname</td>
                        <td>@item.Category</td>
                        <td>@item.RentAmount</td>
                    </tr>
                }
            </tbody>
        </table>
    </div>
</div>

@code
{
    public IEnumerable<EbookRent> rentedBooks => ebookRents;
    public List<EbookRent> ebookRents { get; set; } = new();
    public string TableId => "rentedBooksTable"; 

    protected override async Task OnInitializedAsync()
    {
        await EbookRents();
    }

    private async Task<List<EbookRent>> EbookRents()
    {
        var response = await _studentService.ebookRents(_userStateManagement.username);
        if (response.Any())
        {
            ebookRents.AddRange(response);
            return ebookRents;
        }

        return new List<EbookRent> { };
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await InitializeKeyboardNavigation(TableId);
        }
    }

    private async Task InitializeKeyboardNavigation(string tableId) 
    {
        await JSRuntime.InvokeVoidAsync("initializeKeyboardNavigation", tableId); 
    }
}
