@inject NavigationManager navigator
@inject IStudentService _student

@if (showRegistrationForm)
{
    <h3 class="text-center">Student Registration</h3>
    <div class="container d-flex justify-content-center align-items-center mt-5">
        <div class="border rounded p-4 w-50">
            <EditForm FormName="RegisterForm" Model="addUser" OnSubmit="AddNewUser">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="firstname" class="form-label fw-bold">Firstname:</label>
                    <InputText class="form-control" type="text" id="firstname" @bind-Value=addUser.Firstname placeholder="Enter the Firstname" />
                </div><div class="mb-3">
                    <label for="lastname" class="form-label fw-bold">Lastname:</label>
                    <InputText class="form-control" type="text" id="lastname" @bind-Value=addUser.Lastname placeholder="Enter the Lastname" />
                </div><div class="mb-3">
                    <label for="username" class="form-label fw-bold">Username:</label>
                    <InputText class="form-control" type="text" id="username" @bind-Value=addUser.Username placeholder="Enter the Username" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label fw-bold">Password:</label>
                    <InputText class="form-control" type="password" id="password" @bind-Value=addUser.Password placeholder="Enter the Password" />
                </div>
                <div class="mb-3">
                    <label for="department" class="form-label fw-bold">Department:</label>
                    <BSInput id="department" Class="form-select" InputType="InputType.Select" @bind-Value=addUser.Department>
                        <option value="Computer Science Engineering">CSE</option>
                        <option value="Information Technology">IT</option>
                        <option value="Electrical and Electronics Engineering">EEE</option>
                        <option value="Electrical and Communication Engineering">ECE</option>
                        <option value="Artificial Intelligence and Data Science">AIDS</option>
                        <option value="Mechanical Engineering">MECH</option>
                    </BSInput>
                </div>
                <div class="mb-3">
                    <label for="year" class="form-label fw-bold">Year:</label>
                    <BSInput id="year" Class="form-select" InputType="InputType.Select" @bind-Value=addUser.Year>
                        <option value="1">I</option>
                        <option value="2">II</option>
                        <option value="3">III</option>
                        <option value="4">IV</option>
                    </BSInput>
                </div>
                <div class="mb-3 d-grid gap-2 d-md-flex justify-content-md-center">
                    <button class="btn btn-primary" type="submit">Submit</button>
                    <button class="btn btn-secondary" type="button" @onclick="() => OnCancel.InvokeAsync()">Cancel</button>
                </div>
                <div class="mb-3 text-center">
                    <p>Already Have an Account <NavLink @onclick = "() => showRegistrationForm = false" href="">LogIn</NavLink> Here.</p>
                </div>
            </EditForm>
        </div>
    </div>
}

else
{
    <h3 class="text-center">Student Login</h3>
    <div class="container d-flex justify-content-center align-items-center mt-5">
        <div class="border rounded p-4 w-50">
            <EditForm FormName="UserLogin" Model="getUser" OnSubmit="ValidateUser">
                <DataAnnotationsValidator />
                <ValidationSummary />
                <div class="mb-3">
                    <label for="username" class="form-label fw-bold">Username:</label>
                    <InputText class="form-control" type="text" id="username" @bind-Value=getUser.Username placeholder="Enter the Username" />
                </div>
                <div class="mb-3">
                    <label for="password" class="form-label fw-bold">Password:</label>
                    <InputText class="form-control" type="password" id="password" @bind-Value=getUser.Password placeholder="Enter the Password" />
                </div>
                <div class="mb-3 d-grid gap-2 d-md-flex justify-content-md-center">
                    <button class="btn btn-primary" type="submit">Submit</button>
                    <button class="btn btn-secondary" type="button" @onclick="() => OnCancel.InvokeAsync()">Cancel</button>
                </div>
                <div class="mb-3 text-center">
                    <p>Don't Have an Account <NavLink @onclick="() => showRegistrationForm = true" href="">SignUp</NavLink> Here.</p>
                </div>
            </EditForm>
        </div>
        <h5>Login Failed : @err_msg</h5>
    </div>
 }

@code 
{
    public AddNewStudent addUser { get; set; } = new();
    public GetExistingStudent getUser { get; set; } = new();
    string? err_msg;

    [Parameter]
    public EventCallback OnCancel { get; set; }

    public bool showRegistrationForm = false;

    async void ValidateUser()
    {
        var username = getUser.Username;
        var response = await _student.GetExistingStudent(username);
        if(response.Item2)
        {
            navigator.NavigateTo("/student");
        }
        else
        {
            err_msg = "Invalid User credentials";
        }
    }

    private void AddNewUser()
    {
        
    }
}
