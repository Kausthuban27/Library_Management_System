@inject ILibrarianService _librarianService

<div class="container d-flex justify-content-center align-items-center mt-5">
    <div class="border rounded p-4 w-50">
        <form class="form-group" @onsubmit="GetRentedBooksByAuthor">
            <div class="mb-3">
                <label for="Authorname" class="form-label fw-bold">Authorname</label>
                <InputText class="form-control" type="text" id="Authorname" @bind-Value="authorname" placeholder="Enter the Authorname" />
            </div>
            <div class="mb-3 d-grid gap-2 d-md-flex justify-content-md-center">
                <button class="btn btn-primary" type="submit">Submit</button>
            </div>
        </form>
    </div>
</div>

@if (studentRentedBooks.Any())
{
    <DynamicTables Items="studentRentedBooks" />
}

@code 
{
    public List<StudentRentedBook> studentRentedBooks { get; set; } = new();
    private string authorname = null!;

    private async Task<List<StudentRentedBook>> GetRentedBooksByAuthor()
    {
        studentRentedBooks = await _librarianService.studentRentedBooks(authorname);
        authorname = string.Empty;
        StateHasChanged();
        return studentRentedBooks;
    }
}
