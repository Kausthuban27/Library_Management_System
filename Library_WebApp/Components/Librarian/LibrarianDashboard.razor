@using System.Text
@inject ILibrarianService _librarianService
@inject IJSRuntime jsRuntime

<h3 class="text-center">LibrarianDashboard</h3>

<h3>Books Issued So Far</h3>
<BSDataTable IsResponsive="true" PaginationBottom="false" Items="allbooksIssued" Context="item" StartPage="1" RowsPerPage="2">
    <Header>
        <BSDataTableHead Color="BSColor.Danger" TValue="BookIssue" Column="@(nameof(BookIssue.Id))">Book Id</BSDataTableHead>
        <BSDataTableHead Color="BSColor.Danger" TValue="BookIssue" Column="@(nameof(BookIssue.Bookname))">Bookname</BSDataTableHead>
        <BSDataTableHead Color="BSColor.Danger" TValue="BookIssue" Column="@(nameof(BookIssue.BookAuthor))">Bookauthor</BSDataTableHead>
        <BSDataTableHead Color="BSColor.Danger" TValue="BookIssue" Column="@(nameof(BookIssue.BookPublisher))">Bookpublisher</BSDataTableHead>
        <BSDataTableHead Color="BSColor.Danger" TValue="BookIssue" Column="@(nameof(BookIssue.Category))">Book Category</BSDataTableHead>
        <BSDataTableHead Color="BSColor.Danger" TValue="BookIssue" Column="@(nameof(BookIssue.IssueDate))">Issued On</BSDataTableHead>
        <BSDataTableHead Color="BSColor.Danger" TValue="BookIssue" Column="@(nameof(BookIssue.Username))">Issued To</BSDataTableHead>
    </Header>
    <Body>
        <BSDataTableRow>
            <BSTD>@item.Id</BSTD>
            <BSTD>@item.Bookname</BSTD>
            <BSTD>@item.BookAuthor</BSTD>
            <BSTD>@item.BookPublisher</BSTD>
            <BSTD>@item.Category</BSTD>
            <BSTD>@item.IssueDate</BSTD>
            <BSTD>@item.Username</BSTD>
        </BSDataTableRow>
    </Body>
</BSDataTable>


<button class="btn btn-primary" @onclick="ExportToCSV">Export to CSV</button>

@code 
{
    public List<BookIssue> allbooksIssuedList { get; set; } = new();
    public IEnumerable<BookIssue> allbooksIssued => allbooksIssuedList;

    protected override async Task OnInitializedAsync()
    {
        await GetAllIssuedBooks();
    }

    private async Task<List<BookIssue>> GetAllIssuedBooks()
    {
        var response = await _librarianService.AllBooks();
        allbooksIssuedList.AddRange(response);
        return allbooksIssuedList;
    }

    private async Task ExportToCSV()
    {
        var data = allbooksIssuedList;

        var csvContent = GenerateCSV(data);

        await jsRuntime.InvokeVoidAsync("saveAsFile", "BooksIssuedReport.csv", csvContent);
    }

    private string GenerateCSV(IEnumerable<BookIssue> data)
    {
        StringBuilder sb = new StringBuilder();

        sb.AppendLine("Book Id,Bookname,Book Author,Book Publisher,Category,Issued On,Issued To");

        foreach (var item in data)
        {
            sb.AppendLine($"{item.Id},{item.Bookname},{item.BookAuthor},{item.BookPublisher},{item.Category},{item.IssueDate},{item.Username}");
        }

        return sb.ToString();
    }
}
